//Circular Queue (Updated)
#include <stdio.h>
#define size 5

int queue[size];
int front =  - 1;
int rear =  - 1;


void insert()
{
    int n;
    printf("\nEnter number: ");
    scanf("%d", &n);
    
    if ((front==0 && rear==size-1)||(front == rear + 1))
    {
        printf("queue is full");
        return;
    }
    else if (rear == -1)
    {
        rear++;
        front++;
    }
    else if (rear == size - 1 && front > 0)
    {
        rear = 0;
    }
    else
    {
        rear++;
    }
    queue[rear] = n;
}

void display()
{
    int i;
    printf("\n");
    if (front > rear)
    {
        for (i = front; i < size; i++)
        {
            printf("%d ", queue[i]);
        }
        for (i = 0; i <= rear; i++)
            printf("%d ", queue[i]);
    }
    else
    {
        for (i = front; i <= rear; i++)
            printf("%d ", queue[i]);
    }
}
void delete()
{
    if (front ==  - 1)
    {
        printf("Queue is empty ");
    }
    else if (front == rear)
    {
        printf("\n %d deleted", queue[front]);
        front =  - 1;
        rear =  - 1;
    }
    else
    {
    printf("\n %d deleted", queue[front]);
        front++;
    }
}

int main()
{
    int ch;
    while (1)
    {
        printf("\n\n Circular Queue:\n1. Insert \n2. Delete\n3. Display\n0. Exit");
        printf("\nEnter Choice 0-3? : ");
        scanf("%d", &ch);
        switch (ch)
        {
            case 1: insert();
                    break;
                    
            case 2:  delete();
                    break;
                    
            case 3:  display();
                    break;
        }
    }
}
